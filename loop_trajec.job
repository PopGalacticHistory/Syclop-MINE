#!/bin/sh

# sys.argv gets 4 values:
# [1] - the optimizer - one of three Adam, SGD, RMSprop
# [2] - lr
# [3] - batch_size
# [4] - epochs
# [5] - Net num - 1-3
# [6] - Dropout fc
# [7] - Dropout conv
# [8] - kernel
# [9] - stride
# [10] - pooling
# [11] - max_depth
# [12] - num_layers                           
# [13] - reapeating_block_depth - what number in num_layers should we repeat
# [14] - repeating_block_number - how many times to repeat
# [15] - data_path - if the data is stored outside the working directory. If not 
#                    sys.argv[0] should be 0

param3=(64 1000)
param8=(3 5)
param9=([3 1 1 1 1] [2 1 1 1 1])
param11=(256 512 1024)
param12=(5 8)
param14=(0 4)
maxtry3=2 #${param[@]}
maxtry8=2 
maxtry9=2 
maxtry11=3 
maxtry12=2
maxtry14=2 

try3=0
while [ $try3 -lt $maxtry3 ]
do
try8=0
while [ $try8 -lt $maxtry8 ]
do
try9=0
while [ $try9 -lt $maxtry9 ]
do
try11=0
while [ $try11 -lt $maxtry11 ]
do
try12=0
while [ $try12 -lt $maxtry12 ]
do
try14=0
while [ $try14 -lt $maxtry14 ]
do

		     

cat iter.job <(echo python3.7 syclop_classification_run.py 2 0.003 ${param3[$try3]} 500 0 0.5 0.1 ${param8[$try8]} ${param9[$try9]} [1 2 2 2 2] ${param11[$try11]} ${param12[$try12]} 4 ${param14[$try14]} 0)  > nana.job

bsub  -R "select[mem>4096] rusage[mem=4000]" <nana.job
try14=`expr $try14 + 1`
sleep .1
done
try12=`expr $try12 + 1`
done
try11=`expr $try11 + 1`
done
try9=`expr $try9 + 1`
done
try8=`expr $try8 + 1`
done
try3=`expr $try3 + 1`
done