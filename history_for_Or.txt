    1  ls
    2  top
    3  ls
    4  pwd
    5  ls /home/labs/ahissarlab
    6  ls /home/labs/ahissarlab/archive/
    7  ls /home/labs/ahissarlab/archive/ -lt
    8  pwd
    9  ls -lt
   10  pwd
   11  ls -lt /home/labs/ahissarlab/
   12  mkdir /home/labs/ahissarlab/archive/arivkind
   13  mkdir /home/labs/ahissarlab/archive/
   14  ls /home/labs/ahissarlab/archive/
   15  pwd
   16  groups
   17  pwd
   18  modules list
   19  module list
   20  ls
   21  mkdir rlnet
   22  rm rlnet
   23  rm rlnet -rf
   24  ls rlnet
   25  ls 
   26  ls rlnet1
   27  du rlnet1/ -sh
   28  rm -rf rlnet1/ 
   29  mkdir rlnet1
   30  cd rlnet1/
   31  ls
   32  mkdir saved_runs
   33  module load python/3.5
   34  module list
   35  ls
   36  bsub
   37  bjobs
   38  ls
   39  less example-266098.e
   40  python3
   41  vi basic.job
   42  python3
   43  grep import *.py
   44  grep cv2\. *
   45  vi sham_mnist.py
   46  vi sham_cv2.py
   47  python3
   48  ls
   49  vi SYCLOP_env.py 
   50  python3
   51  vi misc.py 
   52  python3
   53  ls
   54  vi run_syclop_generic1.py 
   55  bsub basic.job 
   56  less basic.job 
   57  sh basic.job 
   58  vi image_env_mnist1.py 
   59  vi run_syclop_generic1.py 
   60  sh basic.job 
   61  ls
   62  ls saved_runs/
   63  bsub < basic.job 
   64  ls
   65  less class MNIST:
   66      def __init__(self,path):
   67          pass
   68      def load_training(self):
   69          return [np.random.uniform(size=[28,28]) for uu in range(500)]
   70  nana=MNIST('adsasdas')
   71  less example-266615.e
   72  less example-266615.o
   73  ls saved_runs/
   74  less example-266615.e
   75  vi RL_brain_b.py 
   76  bsub < basic.job 
   77  ls
   78  less example-275088.e
   79  vi sham_mnist.py 
   80  bsub < basic.job 
   81  ls
   82  less example-275090.e
   83  vi sham_cv2.py 
   84  bsub < basic.job 
   85  less example-275091.e
   86  less example-275091.evi run_syclop_generic1.py 
   87  vi run_syclop_generic1.py 
   88  rm example-2*
   89  bsub < basic.job 
   90  less example-275093.e
   91  less example-275093.o
   92  less example-275093.e
   93  less example-275093.o
   94  less example-275093.e
   95  ls saved_runs/
   96  bqueues
   97  vi basic.job 
   98  bsub < basic.job 
   99  ls
  100  less example-276124.o
  101  ls saved_runs/run_syclop_generic1.py_noname_1563265345/
  102  ls -lth  saved_runs/run_syclop_generic1.py_noname_1563265345/
  103  less example-276124.o
  104  less example-276124.e
  105  rm -rf saved_runs/*
  106  rm example-2*
  107  bsub -R "select[mem>4096] rusage[mem=4000]" < basic.job 
  108  ls saved_runs/
  109  ls saved_runs/run_syclop_generic1.py_noname_1563265921/
  110  less example-276210.o
  111  less example-276210.e
  112  less example-276210.o
  113  ls -lth saved_runs/run_syclop_generic1.py_noname_1563265921/
  114  less example-276210.o
  115  pip3 install opencv-python
  116  python
  117  bsub -R "select[mem>4096] rusage[mem=4000]" < basic.job 
  118  less example-291532.o
  119  less example-291532.e
  120  pip3 install opencv-python -user
  121  pip3 install opencv-python --user
  122  grep sham *.py
  123  vi run_syclop_generic1.py 
  124  vi misc.py 
  125  bjobs
  126  bsub -R "select[mem>4096] rusage[mem=4000]" < basic.job 
  127  less example-305353.e
  128  ls saved_runs/
  129  ls saved_runs/run_syclop_generic1.py_noname_1563283746/
  130  ls -lht  saved_runs/run_syclop_generic1.py_noname_1563283746/
  131  pip3 install mnist --user
  132  grep sham_mnist *
  133  vi misc.py
  134  mkdir ../datasets
  135  ls saved_runs/
  136  less basic.job 
  137  bsub -R "select[mem>4096] rusage[mem=4000]" < basic.job 
  138  bstat
  139  bqueue
  140  bjobs
  141  vi misc.py
  142  bsub -R "select[mem>4096] rusage[mem=4000]" < basic.job 
  143  ls -lht  saved_runs/
  144  ls
  145  Jupyter Notebook
  146  visu_generic1_raster Last Checkpoint: an hour ago (unsaved changes) Current Kernel Logo 
  147  Python 3
  148      File
  149      Edit
  150      View
  151      Insert
  152      Cell
  153      Kernel
  154      Widgets
  155      Help
  156  import pickle
  157  from misc import *
  158  import SYCLOP_env as syc
  159  from RL_brain_b import DeepQNetwork
  160  ​
  161  import matplotlib.pyplot as plt
  162  %matplotlib notebook
  163  import cv2
  164  from mnist import MNIST
  165  ​
  166  mnist = MNIST('/home/bnapp/datasets/mnist/')
  167  images, labels = mnist.load_training()
  168  ​
  169  some_mnist =[ cv2.resize(1.+np.reshape(uu,[28,28]), dsize=(256, 256), interpolation=cv2.INTER_AREA) for uu in images[:20]]           
  170  some_mnistSM =[ cv2.resize(1.+np.reshape(uu,[28,28]), dsize=(256, 256)) for uu in images[:20]]           
  171  some_mnist0p5 =[ 0.5*cv2.resize(1.+np.reshape(uu,[28,28]), dsize=(256, 256), interpolation=cv2.INTER_AREA) for uu in images[:20]]    
  172  some_mnistSM0p5 =[ 0.5*cv2.resize(1.+np.reshape(uu,[28,28]), dsize=(256, 256)) for uu in images[:20]]           
  173  ​
  174      hp = HP()
  175      hp.mem_depth=1
  176      hp.logmode = False
  177  #     recorder = Recorder(n=4)
  178  #     images = read_images_from_path('../video_datasets/liron_images/*.jpg')
  179  #     images = [np.mean(1.0*uu, axis=2) for uu in images]
  180  #     images = [cv2.resize(uu, dsize=(256, 256-64), interpolation=cv2.INTER_AREA) for uu in images]
  181  #     images += read_images_from_path('/home/bnapp/arivkindNet/video_datasets/stills_from_videos/some100img_from20bn/*',max_image=10)
  182      images = some_mnistSM# +some_mnistSM0p5 # + some_mnist0p5 +some_mnistSM 
  183  #     images = [np.sum(1.0*uu, axis=2) for uu in images]
  184  #     images = [cv2.resize(uu, dsize=(256, 256-64), interpolation=cv2.INTER_AREA) for uu in images]
  185  #     import pickle
  186  #     with open('../video_datasets/liron_images/shuffled_images.pkl','rb') as f:
  187  #         uu = pickle.load(f)
  188  #     images +=uu
  189      scene = syc.Scene(frame_list=images)
  190      sensor = syc.Sensor()
  191      agent = syc.Agent(max_q = [scene.maxx-sensor.hp.winx,scene.maxy-sensor.hp.winy])
  192  ​
  193      reward = syc.Rewards()
  194      observation_size = 256*4
  195      RL = DeepQNetwork(len(agent.hp.action_space), observation_size*hp.mem_depth,#sensor.frame_size+2,
  196                        reward_decay=0.99,
  197                        e_greedy=0.99,
  198                        e_greedy0=0.99,
  199                        replace_target_iter=10,
  200                        memory_size=100000,
  201                        e_greedy_increment=0.0001,
  202                        learning_rate=0.0025,
  203                        double_q=False,
  204                        dqn_mode=True,
  205                        state_table=np.zeros([1,observation_size*hp.mem_depth])
  206                        )
  207  ​
  208  # RL.dqn.load_nwk_param('saed_runs/run_syclop_lirondb.py_noname_1557658952/best_liron.nwk')
  209  # RL.dqn.load_nwk_param('saved_runs/old_flat_saves/liron_random_ic05.nwk')
  210  # RL.dqn.load_nwk_param('saved_runs/run_syclop_generic1.py_noname_1559252614/tempX_1.nwk') #10M run
  211  # RL.dqn.load_nwk_param('saved_runs/run_syclop_generic1.py_noname_1559252614/best_liron.nwk') #10M run bset
  212  RL.dqn.load_nwk_param('saved_runs/run_syclop_generic1.py_noname_1559836592/tempX_1.nwk')
  213  # RL.dqn.load_nwk_param('saved_runs/run_syclop_generic1.py_noname_1559248534/tempX_1.nwk')
  214  # RL.dqn.load_nwk_param('saved_runs/run_syclop_generic1.py_noname_1559122242/tempX_1.nwk')
  215  ​
  216  def local_observer(sensor,agent):
  217      if hp.logmode:;          normfactor=1.0;      else:;          normfactor = 1.0/256.0;      return normfactor*np.concatenate([relu_up_and_down(sensor.central_dvs_view),
  218              relu_up_and_down(cv2.resize(1.0*sensor.dvs_view, dsize=(16, 16), interpolation=cv2.INTER_AREA))])
  219  ​
  220  observation = np.random.uniform(0,1,size=[hp.mem_depth, observation_size])
  221  hp.fading_mem = 0.5
  222  recorders=[]
  223  spike_records = []
  224  for image_num,image in enumerate(images):
  225      reco
  226      step = 0
  227      episode = 0
  228      observation = np.random.uniform(0,1,size=[hp.mem_depth, observ
  229      obse
  230      sce
  231  ​
  232      
  233      age
  234      agent
  235      agent.
  236      spi
  237      sensor.re
  238      sensor.update(
  239      sensor.update(scene,
  240      for step_prime in range(100):
  241  #    
  242          oo = RL.dqn.eval_incl_l
  243          action=np.argmax(oo[0])
  244          for ii,uu in enu;              reward.update_rewards(sensor = sensor, agent = agent)
  245          recorder.record([a
  246          agent.act(action)
  247          sensor.update(scene,agent)
  248          observation *= hp.fading_mem
  249          observation += local_observer(sensor, agent)  # todo: generalize
  250          if step%1000 ==0:;              print(episode,step)
  251  #                 print('frame:', scene.current_frame)
  252          step += 1
  253      recorders.append(recorder)
  254      spike_records.append(spikes)
  255  ​
  256  0 0
  257  for image,recorder in zip(i
  258      plt.figure()     plt.imshow(
  259      plt.plot(32+np.arr
  260      plt.plot(32+np.array(recorder.records[0])[0],image.shape[0]-32-np.array(recorder.records[1])[0],'o')
  261      plt.plot(32+np.array(recorder.records[0])[-1],image.shape[0]-32-np.array(recorder.records[1])[-1],'*')
  262  ​
  263  # plt.title('10 syclop trajectories 10,000 timesteps each')
  264  Figure 1
  265  Figure 2
  266  Figure 3
  267  Figure 4
  268  Figure 5
  269  Figure 6
  270  Figure 7
  271  Figure 8
  272  Figure 9
  273  Figure 10
  274  Figure 11
  275  Figure 12
  276  Figure 13
  277  Figure 14
  278  Figure 15
  279  Figure 16
  280  Figure 17
  281  Figure 18
  282  Figure 19
  283  Figure 20
  284  ls
  285  less example-418366.e
  286  python3
  287  pip3 uninstall mnist --user
  288  pip3 uninstall mnist
  289  pip3 install python-mnist --user
  290  bsub -R "select[mem>4096] rusage[mem=4000]" < basic.job 
  291  less example-418707.e
  292  bjobs
  293  less basic.job 
  294  cp basic.job loop.job
  295  vi loop.job
  296  cp basic.job iter.job
  297  vi loop.job
  298  vi iter.job 
  299  echo <iter.job
  300  type < iter.job
  301  echo $1 < iter.job
  302  echo $2 < iter.job
  303  echo ${2} < iter.job
  304  echo mumu < iter.job
  305  ls < iter.job
  306  vi deleteme
  307  ls <  deleteme
  308  python3 <  deleteme
  309  python3 <  deleteme zbz
  310  python3 <  deleteme << zbz
  311  1+1
  312  less deleteme
  313  cat deleteme kkk
  314  cat deleteme echo kkk
  315  cat deleteme deleteme
  316  cat deleteme << try
  317  cat deleteme << 444
  318  s
  319  cat deleteme <(echo try)
  320  cat deleteme <(echo try) | tr '\n' ' '
  321  cat deleteme <(echo try \n) | tr '\n' ' '
  322  vi iter.job 
  323  vi loop.job 
  324  sh loop.job 
  325  vi loop.job 
  326  sh loop.job 
  327  vi loop.job 
  328  bash loop.job 
  329  vi loop.job 
  330  bash loop.job 
  331  vi loop.job 
  332  bash loop.job 
  333  :wq
  334  vi loop.job 
  335  bash loop.job 
  336  less nana
  337  vi loop.job 
  338  bash loop.job 
  339  qjobs
  340  bjobs
  341  vi loop.job 
  342  bash loop.job 
  343  vi loop.job 
  344  bash loop.job 
  345  vi loop.job 
  346  less loop.job 
  347  less iter.job 
  348  vi loop.job 
  349  bjobs
  350  bash loop.job 
  351  bsub -R "select[mem>4096] rusage[mem=4000]" < basic.job 
  352  vi iter.job 
  353  bash loop.job 
  354  vi loop.job 
  355  bash loop.job 
  356  less nana
  357  vi loop.job 
  358  bash loop.job 
  359  bjobs
  360  less loop.job
  361  vi loop.job
  362  bash loop.job 
  363  jobs
  364  bjobs
  365  bkill 424123
  366  bjobs
  367  less example-424374.e
  368  bjobs
  369  python3
  370  vi run_syclop_generic1.py 
  371  bjobs
  372  vi loop.job 
  373  bash loop.job 
  374  bjobs
  375  less example-430250.e
  376  bjobs
  377  less example-430255.e
  378  bkill 430249 430250 430252 430257
  379  ls saved_runs/
  380  rm -rf run_syclop_generic1.py_noname_15633652688*
  381  vi run_syclop_generic1.py 
  382  vi loop.job 
  383  bash loop.job 
  384  bjobs
  385  ls saved_runs/
  386  ls saved_runs/run_syclop_generic1.py_noname_156336590835214464
  387  ls -lth  saved_runs/run_syclop_generic1.py_noname_156336590835214464
  388  ls -lht saved_runs/run_syclop_generic1.py_noname_1563361626
  389  ls -lth  saved_runs/run_syclop_generic1.py_noname_156336590835214464
  390  bjobs
  391  ls -lth  saved_runs/run_syclop_generic1.py_noname_156336590835214464
  392  ls -lth  saved_runs/run_syclop_generic1.py_noname_156336590835219200/
  393  bjobs
  394  ls  saved_runs/run_syclop_generic1.py_noname_1563365908*
  395  ls
  396  mkdir blogs
  397  mv example-* blogs/
  398  ls 
  399  cp loop.job loop2.job
  400  vi loop2.job 
  401  bash loop2.job
  402  less nana
  403  vi loop2.job 
  404  less nana.job 
  405  rm nana.job 
  406  bash loop2.job
  407  less nana.job 
  408  bash loop2.job
  409  rm nana.job 
  410  vi loop2.job 
  411  rm nana.job 
  412  bash loop2.job
  413  less nana.job 
  414  vi run_syclop_generic1.py 
  415  vi loop2.job 
  416  bash loop2.job
  417  bash loop2.job
  418  bjobs 
  419  bkill *
  420  bkill --all
  421  bkill -u all
  422  bjobs 
  423  bkill -u all
  424  bkill -u arivkind
  425  bkill -u arivkind all
  426  bkill -u arivkind -u all
  427  bkill -u arivkind
  428  bkill -u arivkind -u all
  429  bkill -u arivkind
  430  bjobs
  431  bkill 475*
  432  bkill 475760
  433  bkill 475761
  434  bkill 475762
  435  bkill 475763
  436  bkill 475764
  437  bkill 475765
  438  bkill 475766
  439  bkill 475767
  440  bkill 475768
  441  bkill 475769
  442  bkill 475770
  443  bkill 475771
  444  bkill 475772
  445  bkill 475773
  446  bkill 475774
  447  bkill 475775
  448  bkill 475776
  449  bkill 475777
  450  bkill 475778
  451  bkill 475779
  452  bjobs 
  453  ls saved_runs/
  454  ls saved_runs/run_syclop_generic1.py_noname_156343643617894528/
  455  ls -lht saved_runs/run_syclop_generic1.py_noname_156343643617894528/
  456  ls -lht saved_runs/run_syclop_generic1.py_noname_156343643617*/
  457  rm -fr saved_runs/run_syclop_generic1.py_noname_156343643617*/
  458  ls
  459  mv example-475* blogs/
  460  ls
  461  ls saved_runs/ -t
  462  less loop2.job 
  463  vi run_syclop_generic1.py 
  464  less loop2.job 
  465  vi run_syclop_generic1.py 
  466  bash loop2.job
  467  bjobs
  468  less example-504938.e
  469  vi run_syclop_generic1.py 
  470  du -sh ../video_datasets/
  471  bash loop2.job
  472  bjobs
  473  less example-53119.e
  474  pip3 install imageio --user
  475  vi misc.py 
  476  bash loop2.job
  477  bjobs
  478  ls saved_runs/ -t
  479  rm -rf saved_runs/run_syclop_generic1.py_noname_15637082*
  480  ls
  481  ls saved_runs/ -t
  482  cp run_syclop_generic1.py run_syclop_generic2.py 
  483  vi run_syclop_generic2.py 
  484  vi loop2.job 
  485  bash loop2.job
  486  bjobs
  487  ls saved_runs/run_syclop_generic2.py_noname_156378942841*
  488  vi run_syclop_generic2.py 
  489  less example-169484.o
  490  less example-169484.e
  491  bjobs
  492  ls saved_runs/
  493  vi run_syclop_generic2.py 
  494  less example-169484.o
  495  bash loop2.job
  496  bjobs
  497  bjobssssssss
  498  bjobs
  499  ls saved_runs/
  500  ls saved_runs/ -t
  501  ls saved_runs/ -tl
  502  ls saved_runs/run_syclop_generic2.py_noname_15638*/records* -lth
  503  ls example-* -t
  504  ls example-* -thl
  505  less example-365402.e
  506  grep KeyboardInterrupt example-*
  507  less example-365410.o
  508  less example-365415.o
  509  less example-365415.e
  510  less example-365415.o
  511  grep 'python3 run_syclop_generic2.py 10 0.1' example-*.o
  512  less example-169491.o
  513  less example-365415.o
  514  diff example-169491.o example-365415.o >deleteme
  515  less deleteme 
  516  diff example-169491.e example-365415.e 
  517  less example-169491.e
  518  less example-365415.e 
  519  less example-169491.e
  520  ls -lth example-169491.o
  521  ls -lth example-365415.o 
  522  less example-365415.o
  523  less example-169491.o
  524  less example-365415.o
  525  ls examp* -lth
  526  history | grep mv
  527   mv example-* blogs/
  528  ls
  529  ls *
  530  ls core.13361 
  531  ls core.13361 -lth
  532  cp run_syclop_generic2.py run_syclop_generic3.py
  533  vi run_syclop_generic3.py 
  534  vi loop2.job 
  535  ls
  536  bash loop2.job
  537  bjobs 
  538  vi loop2.job 
  539  bash loop2.job
  540  bjobs 
  541  grep -c generic3
  542  grep generic3 -c  *.py
  543  grep generic3 -c  *.o
  544  less example-263700.o
  545  less example-263700.e
  546  less example-263700.o
  547  vi rerun_fails.sh
  548  grep generic3 -c  *.o | grep 1
  549  grep generic3 -c  *.o | grep :1
  550  less example-263700.o
  551  less example-263199.o
  552  less example-263700.o
  553  vi rerun_fails.sh
  554  bash rerun_fails.sh 
  555  vi rerun_fails.sh
  556  bash rerun_fails.sh 
  557  vi rerun_fails.sh
  558  bash rerun_fails.sh 
  559  vi rerun_fails.sh
  560  bash rerun_fails.sh 
  561  vi rerun_fails.sh
  562  bash rerun_fails.sh 
  563  vi rerun_fails.sh
  564  bash rerun_fails.sh 
  565  vi rerun_fails.sh
  566  bash rerun_fails.sh 
  567  vi rerun_fails.sh
  568  bash rerun_fails.sh 
  569  less loop2.job 
  570  bash rerun_fails.sh 
  571  vi rerun_fails.sh
  572  bash rerun_fails.sh 
  573  less nana.job 
  574  vi rerun_fails.sh
  575  bash rerun_fails.sh 
  576  bjobs
  577  less 613100.e
  578  less example-613100.e
  579  less example-613100.o
  580  bjobs
  581  vi rerun_fails.sh
  582  bjobs
  583  less example-613102.o
  584  bash rerun_fails.sh 
  585  bjobs
  586  bash rerun_fails.sh 
  587  bjobs
  588  less example-613217.o
  589  less example-613217.e
  590  bash rerun_fails.sh 
  591  bjobs
  592  less rerun_fails.sh 
  593  bash rerun_fails.sh 
  594  bjobs
  595  less loop.job 
  596  bsub  -R "select[mem>4096] rusage[mem=4000]" <nana.job
  597  bjobs
  598  less nana.job 
  599  less example-613100.o
  600  vi nana.job 
  601  less nana
  602  less nana.job 
  603  bsub  -R "select[mem>4096] rusage[mem=4000]" <nana.job
  604  bjobs
  605  module load python/3.6.0
  606  python3
  607  pip3 install mnist
  608   bsub -R "select[mem>4096] rusage[mem=4000]" < basic.job 
  609  cd rlnet1/
  610   bsub -R "select[mem>4096] rusage[mem=4000]" < basic.job 
  611  ls
  612  less example-291368.e
  613   less basic.job 
  614  ls
  615  cd rlnet1/
  616  ls
  617  rm example-*
  618  ls
  619  less run_syclop_generic3.py 
  620  cp run_syclop_generic3.py run_syclop_generic4.py
  621  vi run_syclop_generic4.py 
  622  ls *.sh
  623  less loop2.job 
  624  diff RL_brain_b.py ../RL_brain_b.py 
  625  mv ../RL_brain_b.py .
  626  grep boltzmann  RL_brain_b.py 
  627  grep argv run_syclop_generic4.py 
  628  python
  629  module python3
  630  module python3.5
  631  module python3p5
  632  python3
  633  less loop.job 
  634  module avail | grep python
  635  module python/3.5.2
  636  module load python/3.5.2
  637  ls
  638  vi loop2.job 
  639  grep argv run_syclop_generic4.py 
  640  vi loop2.job 
  641  vi run_syclop_generic4.py 
  642  vi loop2.job 
  643  bash loop2.job 
  644  vi loop2.job 
  645  bash loop2.job 
  646  vi loop2.job 
  647  bash loop2.job 
  648  bjobs
  649  vi run_syclop_generic4.py 
  650  bjobs
  651  vi run_syclop_generic4.py 
  652  bjobs
  653  ls
  654  less example-376853.o
  655  bjobs
  656  ls saved_runs/
  657  vi loop2.job 
  658  vi run_syclop_generic4.py 
  659  bash loop2.job 
  660  bjobs 
  661  ls
  662  bjobs
  663  vi loop2.job 
  664  bash loop2.job 
  665  bjobs
  666  less example-571662.e
  667  bjobs
  668  less example-571633.e
  669  less example-571633.o
  670  less example-571634.e
  671  bjobs
  672  less example-571664.o
  673  less example-571661.o
  674  vi loop2.job 
  675  vi run_syclop_generic4.py 
  676  bjobs
  677  vi loop2.job 
  678  bash loop2.job 
  679  ls saved_runs/ -T
  680  ls saved_runs/ -t
  681  bjobs
  682  less example-572088.o
  683  less example-572088.e
  684  less example-572087.e
  685  less example-572089.e
  686  vi loop2.job 
  687  bash loop2.job 
  688  bjobs
  689  ls
  690  git clone https://github.com/PopGalacticHistory/Syclop-MINE.git
  691  ls
  692  cd Syclop-MINE/
  693  ls
  694  history |grep module
  695   module load python/3.6.0
  696  history |grep pip
  697  python
  698  pip install torch torchvision --user
  699  pip install pandas
  700  pip install PyPrind --user
  701  grep sys *
  702  python mine_run.py 1 1e-3 1000 10 1
  703  history |grep ssh
  704  ls ../rlnet1/
  705  rm ../rlnet1/*.o
  706  rm ../rlnet1/*.e
  707  ls ../rlnet1/
  708  cp ../rlnet1/*.sh
  709  cp ../rlnet1/*.sh .
  710  cp ../rlnet1/*.job .
  711  ls
  712  ls basic.job 
  713  less basic.job 
  714  vi basic.job 
  715  history |grep basic
  716  bsub < basic.job 
  717  bstatus
  718  ls
  719  less example-704687.e
  720  python -c "import torchvision; print(torchvision.__version__)
"
  721  python -c "import torchvision; print(torchvision.__version__)"
  722  pip freeze |grep torchvision
  723  pip freeze |grep torch
  724  python -m pip install --upgrade pip
  725  python -m pip install --upgrade pip --user
  726  pip install torch torchvision --user
  727  python -m pip install torch torchvision --user
  728  pip freeze |grep torch
  729   module load python/3.7.0
  730  python -m pip install torch torchvision --user
  731  python -m pip install --upgrade pip --user
  732  python -m pip install torch torchvision --user
  733  pip freeze |grep torch
  734  bsub < basic.job 
  735  ls
  736  less example-707298.
  737  less example-707298.e
  738  less example-707298.o
  739  history | less
  740  bstat
  741  history | less
  742  bjobs
  743  ls
  744  less example-707298.o
  745  less example-707298.e
  746  rm example-70*
  747  ls
  748  pip install PyPrind --user
  749  ls
  750  pip install pandas --user
  751  bsub < basic.job 
  752  ls
  753  bstat
  754  bjobs 
  755  less example-707481.e
  756  pip freeze |grep torch
  757  python -m pip install torch torchvision --user
  758  python -m pip uninstall torch torchvision --user
  759  python -m pip uninstall torch torchvision 
  760  python -m pip install torch  --user
  761  python -m pip install torch==1.4.0  --user
  762  python -m pip install  torchvision --user
  763  ls
  764  rm example-*
  765  bsub < basic.job 
  766  ls
  767  bjobs 
  768  less example-708104.o
  769  less example-708104.e
  770  ls
  771  bjobs 
  772  mkdir results
  773  mv results_* results
  774  mv net_* results
  775  ls
  776  less basic.job 
  777  ls results/
  778  vi loop2.job 
  779  bash loop2.job 
  780  bjobs 
  781  ls
  782  bjobs 
  783  ls
  784  bjobs 
  785  mv net_* results
  786  mv results_* results
  787  ls
  788  zip -r results.zip results/
  789  mail sashkarivkind@gmail.com -a results.zip
  790  mail  -a results.zip -s "results for Or" sashkarivkind@gmail.com
  791  mail  -a results.zip sashkarivkind@gmail.com
  792  ls -lth results.zip 
  793  mail -a results.zip sashkarivkind@gmail.com
  794  pwd
  795  ls results
  796  ls results/*.csv
  797  ls results/*.
  798  ls results/*
  799  ls
  800  rm example-7*
  801  ls
  802  rm -r results/*
  803  rm -r results.zip
  804  ls
  805  cd ..
  806  cp -r Syclop-MINE/ Syclop-MINE_bkp/
  807  ls
  808  history | grep wg
  809  history | grep wget
  810  history | grep git
  811  git clone https://github.com/PopGalacticHistory/Syclop-MINE.git
  812  mv Syclop-MINE Syclop-MINE_prime
  813  git clone https://github.com/PopGalacticHistory/Syclop-MINE.git
  814  cd Syclop-MINE
  815  cp ../Syclop-MINE_prime/*.job .
  816  cp ../Syclop-MINE_prime/*.sh .
  817  ls
  818  vi loop2.job 
  819  bash loop2.job 
  820  bjobs
  821  ls
  822  less example-993518.e
  823  bjobs
  824  less example-993518.o
  825  bjobs
  826  ls
  827  less example-993518.o
  828  less example-993518.e
  829  vi mine_run.py 
  830  rm example-993*
  831  ls
  832  bash loop2.job 
  833  bjobs
  834  ls
  835  bjobs
  836  ls
  837  bjobs
  838  ls | grep =c net
  839  ls | grep -c net
  840  ls | grep =c results
  841  ls | grep -c results
  842  ls
  843  ls | grep -c csv
  844  mkdir results
  845  cp results_* results/
  846  zip -r results_partial.zip results/
  847  less loop2.job 
  848  bjobs
  849  ls | grep -c csv
  850  ks
  851  ls
  852  mv results_* results
  853  ls
  854  rm example-994*
  855  ls
  856  less core.72013 
  857  rm core.*
  858  ls
  859  less loop2.job 
  860  vi loop2.job 
  861  less iter.job 
  862  less nana.job 
  863  vi pizza.sh
  864  history >history_for_Or.txt
